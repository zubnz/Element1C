импорт СистемаПравДоступа

@Обработчик
метод ВычислитьРазрешенияДоступа(): ЧитаемаяКоллекция<РазрешениеДоступа>
    
    возврат [
        новый РазрешениеДоступа(
            [новый КлючАккаунтаПриложения.Объект(ВидыАккаунтов.Модератор)], // массив экземпляров ключей доступа
            [Сущность.Право.Удаление]  // массив системны прав доступа (чтение, создание, изменение или удаление)
        )
    ]
;

@ВПроекте
@НаСервере
@ДоступноСКлиента
метод АккаунтПользователя(): Аккаунты.Ссылка?
    
    знч ТекущийПользователь = Пользователи.ТекущийПользователь
    
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Аккаунты.Ссылка КАК Ссылка
        ИЗ
            Аккаунты КАК Аккаунты
        ГДЕ
            Аккаунты.Пользователь == %ТекущийПользователь
    }

    исп Результат = Запрос.Выполнить()
    
    знч АккаунтСсылка = Результат.ПервыйИлиУмолчание().Ссылка
    
    возврат АккаунтСсылка
    
;

@ВПроекте
метод АккаунтПользователя(ТекущийПользователь: Пользователи.Ссылка): Аккаунты.Ссылка?
    
   знч Запрос = Запрос{
        ВЫБРАТЬ
            Аккаунты.Ссылка КАК Ссылка
        ИЗ
            Аккаунты КАК Аккаунты
        ГДЕ
            Аккаунты.Пользователь == %ТекущийПользователь
    }

    исп Результат = Запрос.Выполнить()
    
    знч АккаунтСсылка = Результат.ПервыйИлиУмолчание()?.Ссылка
    
    возврат АккаунтСсылка
    
;

//@ВПроекте
//метод АккаунтПользователя_Тест(ТекущийПользователь: Пользователи.Ссылка? = Неопределено)
//   
//   если ТекущийПользователь == Неопределено
//    ТекущийПользователь = Пользователи.ТекущийПользователь
//    ; 
//    
//   знч Запрос = Запрос{
//        ВЫБРАТЬ
//            Аккаунты.Ссылка КАК Ссылка
//        ИЗ
//            Аккаунты КАК Аккаунты
//        ГДЕ
//            Аккаунты.Пользователь == %ТекущийПользователь
//    }
//
//    исп Результат = Запрос.Выполнить()
//    
//    знч АккаунтСсылка = Результат.ПервыйИлиУмолчание().Ссылка
//    
//    возврат АккаунтСсылка
//    
//;

@ВПроекте
метод ПользователиАккаунта(): Соответствие<ВидыАккаунтов, Массив<Пользователи.Ссылка>>
    пер СписокПользователей: Соответствие<ВидыАккаунтов, Массив<Пользователи.Ссылка>>     
    
    для Элемент из ВидыАккаунтов.Элементы()
        СписокПользователей.Вставить(Элемент, [])    
    ;
    
    знч Запрос = Запрос{
        ВЫБРАТЬ
            Аккаунты.Пользователь КАК Пользователь,
            Аккаунты.ВидАккаунта КАК ВидАккаунта
        ИЗ
            Аккаунты КАК Аккаунты
        ГДЕ
            Аккаунты.Пользователь != Неопределено
    }
    
    исп Результат = Запрос.Выполнить()
    
    для Выборка из Результат
        СписокПользователей[Выборка.ВидАккаунта].Добавить(Выборка.Пользователь)  
    ;
    
    возврат СписокПользователей

;

@Подписка(Событие{Пользователи.Объект.ПослеПодключения})
метод ИнициализацияАккаунта(Источник: Пользователи.Объект)
    если АккаунтПользователя(Источник.Ссылка) == Неопределено
        знч НовыйАккаунт = новый Аккаунты.Объект()
        НовыйАккаунт.Пользователь = Источник.Ссылка
        НовыйАккаунт.Наименование = ПользователиСервиса.Найти(Источник.Ид).Логин
        НовыйАккаунт.Записать()
    ;    
;